from django.http import HttpResponse
from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required

# FunÃ§Ã£o auxiliar: checa se o usuÃ¡rio pertence a um grupo
def usuario_do_grupo(user, nome_grupo):
    return user.groups.filter(name=nome_grupo).exists()

# PÃ¡gina inicial (pÃºblica)
def home(request):
    return render(request, 'home.html')

# PainÃ©is protegidos por grupo
@login_required(login_url='/login/')
def aluno(request):
    if usuario_do_grupo(request.user, "Aluno"):   # ğŸ‘ˆ sÃ³ se for do grupo "Aluno"
        return render(request, 'aluno.html')
    return HttpResponse("Acesso negado: vocÃª nÃ£o Ã© aluno.")

@login_required(login_url='/login/')
def professor(request):
    if usuario_do_grupo(request.user, "Professor"):
        return render(request, 'professor.html')
    return HttpResponse("Acesso negado: vocÃª nÃ£o Ã© professor.")

@login_required(login_url='/login/')
def secretaria(request):
    if usuario_do_grupo(request.user, "Secretaria"):
        return render(request, 'secretaria.html')
    return HttpResponse("Acesso negado: vocÃª nÃ£o Ã© da secretaria.")

@login_required(login_url='/login/')
def coordenacao(request):
    if usuario_do_grupo(request.user, "Coordenacao"):
        return render(request, 'coordenacao.html')
    return HttpResponse("Acesso negado: vocÃª nÃ£o Ã© da coordenaÃ§Ã£o.")

@login_required(login_url='/login/')
def direcao(request):
    if usuario_do_grupo(request.user, "Direcao"):
        return render(request, 'direcao.html')
    return HttpResponse("Acesso negado: vocÃª nÃ£o Ã© da direÃ§Ã£o.")
